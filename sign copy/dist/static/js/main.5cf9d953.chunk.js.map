{"version":3,"sources":["Authenticate.js","SignUserMessage.js","App.js","index.js"],"names":["Card","styled","div","SignInOutButton","loggedIn","user","signInOrOut","event","a","preventDefault","fcl","onClick","CurrentUser","useState","setUser","useEffect","subscribe","pre","GetLatestBlock","signedMessage","setSignedMessage","compSignatures","setCompSignatures","userAddress","setUserAddress","signUserMessage","currentTimestamp","String","Date","getTime","str","hexMessage","Array","from","map","c","charCodeAt","toString","encodeURIComponent","replace","toLowerCase","join","window","parent","postMessage","message","value","JSON","stringify","addr","Wrapper","App","Authenticate","SignUserMessage","put","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAIMA,EAAOC,IAAOC,IAAV,wHAOJC,EAAkB,SAAC,GAA4B,IAAlBC,EAAiB,EAAzBC,KAAQD,SAC3BE,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAClBD,EAAME,iBACFL,EACFM,MAEAA,MALgB,2CAAH,sDAQjB,OACE,wBAAQC,QAASL,EAAjB,SACGF,EAAW,WAAa,gBAmBhBQ,EAfK,WAAO,IAAD,EACAC,mBAAS,IADT,mBACjBR,EADiB,KACXS,EADW,KAQxB,OALAC,qBACE,kBAAML,MAAkBM,WAAU,SAACX,GAAD,OAAUS,EAAQ,eAAKT,SACzD,IAIA,cAACL,EAAD,UACE,cAAC,EAAD,CAAiBK,KAAMA,OChCvBL,EAAOC,IAAOC,IAAV,wHAOGD,IAAOgB,IAAV,uIAyDKC,I,EAAAA,EAjDQ,WAAO,IAAD,EACeL,mBAAS,MADxB,mBACpBM,EADoB,KACLC,EADK,OAEiBP,mBAAS,MAF1B,mBAEpBQ,EAFoB,KAEJC,EAFI,OAGWT,mBAAS,MAHpB,mBAGpBU,EAHoB,KAGPC,EAHO,KAKrBC,EAAe,uCAAG,WAAOlB,GAAP,mBAAAC,EAAA,6DACtBD,EAAME,iBACAiB,EAAmBC,QAAO,IAAIC,MAAOC,WA8B5BC,EA7BcJ,EAAvBK,EA8BDC,MAAMC,KAAKH,GACfI,KAAI,SAACC,GAAD,OACHA,EAAEC,WAAW,GAAK,IACdD,EAAEC,WAAW,GAAGC,SAAS,IACzBC,mBAAmBH,GAAGI,QAAQ,MAAO,IAAIC,iBAE9CC,KAAK,IAvCgB,SAIO/B,MAAkBe,gBAAgBM,GAJzC,OAIhBV,EAJgB,OAKtBqB,OAAOC,OAAOC,YACZ,CACEC,QAAS,iBACTC,MAAO,CACL3B,cAAeO,EACfL,eAAgBA,IAGpB,KAEFD,EAAiBM,GACjBJ,EAAkByB,KAAKC,UAAU3B,IACjCG,EAAeH,EAAe,GAAG4B,MAjBX,kCAgC1B,IAAmBnB,IAhCO,OAAH,sDAoBrB,OACE,eAAC,EAAD,WACE,wBAAQnB,QAASc,EAAjB,kBACA,uBAFF,gBAGgBF,EACd,uBAJF,YAKYJ,EACV,uBANF,mBAOmBE,MC/CjB6B,EAAUjD,IAAOC,IAAV,8FAcEiD,MATf,WACE,OACE,eAACD,EAAD,WACE,cAACE,EAAD,IACA,cAACC,EAAD,QCRN3C,MAEG4C,IAAI,iBAAkB,qCACtBA,IAAI,sBAAuB,gDAE9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5cf9d953.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as fcl from \"@onflow/fcl\";\n\nconst Card = styled.div`\n  margin: 10px 5px;\n  padding: 10px;\n  border: 1px solid #c0c0c0;\n  border-radius: 5px;\n`;\n\nconst SignInOutButton = ({ user: { loggedIn } }) => {\n  const signInOrOut = async (event) => {\n    event.preventDefault();\n    if (loggedIn) {\n      fcl.unauthenticate();\n    } else {\n      fcl.authenticate();\n    }\n  };\n  return (\n    <button onClick={signInOrOut}>\n      {loggedIn ? \"Sign Out\" : \"Sign In/Up\"}\n    </button>\n  );\n};\nconst CurrentUser = () => {\n  const [user, setUser] = useState({});\n\n  useEffect(\n    () => fcl.currentUser().subscribe((user) => setUser({ ...user })),\n    []\n  );\n\n  return (\n    <Card>\n      <SignInOutButton user={user} />\n    </Card>\n  );\n};\n\nexport default CurrentUser;\n","import React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  margin: 10px 5px;\n  padding: 10px;\n  border: 1px solid #c0c0c0;\n  border-radius: 5px;\n`;\n\nconst Code = styled.pre`\n  background: #f0f0f0;\n  border-radius: 5px;\n  max-height: 150px;\n  overflow-y: auto;\n  padding: 5px;\n`;\n\nconst GetLatestBlock = () => {\n  const [signedMessage, setSignedMessage] = useState(\"--\");\n  const [compSignatures, setCompSignatures] = useState(\"--\");\n  const [userAddress, setUserAddress] = useState(\"--\");\n\n  const signUserMessage = async (event) => {\n    event.preventDefault();\n    const currentTimestamp = String(new Date().getTime());\n    const hexMessage = utf8ToHex(currentTimestamp);\n    const compSignatures = await fcl.currentUser().signUserMessage(hexMessage);\n    window.parent.postMessage(\n      {\n        message: \"compSignatures\",\n        value: {\n          signedMessage: currentTimestamp,\n          compSignatures: compSignatures,\n        },\n      },\n      \"*\"\n    );\n    setSignedMessage(currentTimestamp);\n    setCompSignatures(JSON.stringify(compSignatures));\n    setUserAddress(compSignatures[0].addr);\n  };\n\n  return (\n    <Card>\n      <button onClick={signUserMessage}>Sign</button>\n      <br />\n      userAddress: {userAddress}\n      <br />\n      message: {signedMessage}\n      <br />\n      compSignatures: {compSignatures}\n    </Card>\n  );\n};\nfunction utf8ToHex(str) {\n  return Array.from(str)\n    .map((c) =>\n      c.charCodeAt(0) < 128\n        ? c.charCodeAt(0).toString(16)\n        : encodeURIComponent(c).replace(/\\%/g, \"\").toLowerCase()\n    )\n    .join(\"\");\n}\nfunction hexToUtf8(hex) {\n  return decodeURIComponent(\"%\" + hex.match(/.{1,2}/g).join(\"%\"));\n}\nexport default GetLatestBlock;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Authenticate from \"./Authenticate.js\";\nimport SignUserMessage from \"./SignUserMessage.js\";\nconst Wrapper = styled.div`\n  font-size: 13px;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Authenticate />\n      <SignUserMessage />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as fcl from \"@onflow/fcl\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nfcl\n  .config()\n  .put(\"accessNode.api\", \"https://access-testnet.onflow.org\")\n  .put(\"challenge.handshake\", \"https://flow-wallet-testnet.blocto.app/authn\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}