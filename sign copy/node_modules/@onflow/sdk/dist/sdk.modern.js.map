{"version":3,"file":"sdk.modern.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/config/index.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-execute-script.js","../src/send/send-get-account.js","../src/send/send-get-events.js","../src/send/send-get-block.js","../src/send/send-get-block-header.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/send-get-collection.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-proposer-sequence-number.js","../src/test-utils/mock-send.js","../src/test-utils/authz-fn.js","../src/test-utils/run.js","../src/VERSION.js","../src/sdk.js","../src/utils/deprecate.js"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  acct = typeof acct === \"function\" ? {resolve: acct} : acct\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst GET_ALL = \"GET_ALL_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst CLEAR = \"CLEAR_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [GET_ALL]: (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [CLEAR]: (ctx, letter) => {\n    let keys = Object.keys(ctx.all())\n    for (let key of keys) ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\nasync function first(wants = [], fallback) {\n  if (!wants.length) return fallback\n  const [head, ...rest] = wants\n  const ret = await get(head)\n  if (ret == null) return first(rest, fallback)\n  return ret\n}\n\nfunction all() {\n  return send(NAME, GET_ALL, null, {expectReply: true, timeout: 10})\n}\n\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\nexport function clearConfig() {\n  return send(NAME, CLEAR)\n}\n\nfunction config(values) {\n  if (values != null && typeof values === \"object\") {\n    Object.keys(values).map(d => put(d, values[d]))\n  }\n\n  return {\n    put,\n    get,\n    all,\n    first,\n    update,\n    delete: _delete,\n    where,\n    subscribe,\n    overload,\n  }\n}\n\nconfig.put = put\nconfig.get = get\nconfig.all = all\nconfig.first = first\nconfig.update = update\nconfig.delete = _delete\nconfig.where = where\nconfig.subscribe = subscribe\nconfig.overload = overload\n\nexport {config}\n\nconst noop = v => v\nfunction overload(opts = {}, callback = noop) {\n  return new Promise(async (resolve, reject) => {\n    const oldConfig = await all()\n    try {\n      config(opts)\n      var result = await callback(await all())\n      await clearConfig()\n      await config(oldConfig)\n      resolve(result)\n    } catch (error) {\n      await clearConfig()\n      await config(oldConfig)\n      reject(error)\n    }\n  })\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\nimport {config} from \"../config\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  const metadataFromConfig = await config().get(\"grpc.metadata\", {})\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      metadata: new grpc.Metadata(metadataFromConfig),\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(sig.getAddress_asU8()),\n    keyId: sig.getKeyId(),\n    signature: u8ToHex(sig.getSignature_asU8())\n  })\n\n  let transaction = res.getTransaction()\n  ret.transaction = {\n      script: Buffer.from(transaction.getScript_asU8()).toString(\"utf8\"),\n      args: (transaction.getArgumentsList()).map(arg => JSON.parse(Buffer.from(arg).toString(\"utf8\"))),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    \n    req.setBlockId(hexBuffer(ix.block.id))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockID, req)\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n\n    req.setBlockHeight(Number(ix.block.height))\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtBlockHeight, req) \n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n\n    const code = Buffer.from(ix.message.cadence, \"utf8\")\n    ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n    req.setScript(code)\n\n    res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setBlockHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, ix.block.height ? AccessAPI.GetAccountAtBlockHeight : AccessAPI.GetAccountAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: Buffer.from(contract[1] || new UInt8Array()).toString(\"utf8\")\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: Buffer.from(account.getCode_asU8() || new UInt8Array()).toString(\"utf8\"),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n  \n  ix = await ix\n \n  let res\n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n\n    res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n\n    res = await unary(opts.node, AccessAPI.GetEventsForBlockIDs, req)\n  }\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = u8ToHex(result.getBlockId_asU8())\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp().toDate().toISOString()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {GetBlockByIDRequest, GetBlockByHeightRequest, GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlock(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n    \n    res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n  } else {\n    req = new GetLatestBlockRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n  }\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = (block.getSignaturesList()).map(u8ToHex)\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp().toDate().toISOString(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: (collectionGuarantee.getSignaturesList()).map(u8ToHex),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: (blockSeal.getExecutionReceiptSignaturesList()).map(u8ToHex),\n      resultApprovalSignatures: (blockSeal.getResultApprovalSignaturesList()).map(u8ToHex),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetLatestBlockHeaderRequest, GetBlockHeaderByIDRequest, GetBlockHeaderByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockHeader(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req\n  let res\n  if (ix.block.id) {\n    req = new GetBlockHeaderByIDRequest()\n    req.setId(hexBuffer(ix.block.id))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByID, req)\n  } else if (ix.block.height) {\n    req = new GetBlockHeaderByHeightRequest()\n    req.setHeight(Number(ix.block.height))\n\n    res = await unary(opts.node, AccessAPI.GetBlockHeaderByHeight, req)\n  } else {\n    req = new GetLatestBlockHeaderRequest()\n\n    if (ix.block && ix.block.isSealed) {\n      req.setIsSealed(ix.block.isSealed)\n    }\n\n    res = await unary(opts.node, AccessAPI.GetLatestBlockHeader, req)\n  }\n\n  const blockHeader = res.getBlock()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.blockHeader = {\n    id: u8ToHex(blockHeader.getId_asU8()),\n    parentId: u8ToHex(blockHeader.getParentId_asU8()),\n    height: blockHeader.getHeight(),\n    timestamp: blockHeader.getTimestamp().toDate().toISOString(),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetCollectionByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetCollection(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  let req = new GetCollectionByIDRequest()\n  req.setId(hexBuffer(ix.collection.id))\n\n  let res = await unary(opts.node, AccessAPI.GetCollectionByID, req)\n\n  const collection = res.getCollection()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.collection = {\n    id: u8ToHex(collection.getId_asU8()),\n    transactionIds: (collection.getTransactionIdsList()).map(u8ToHex)\n  }\n\n  return ret\n}\n","import {\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isScript,\n  isGetAccount,\n  isGetEvents,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetLatestBlock,\n  isGetBlockById,\n  isGetBlockByHeight,\n  isPing,\n  isGetCollection,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetBlock} from \"./send-get-block.js\"\nimport {sendGetBlockHeader} from \"./send-get-block-header.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendGetCollection} from \"./send-get-collection.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"../config\"\n\nexport const send = async (ix, opts = {}) => {\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n  ix = await ix\n\n  // prettier-ignore\n  switch (true) {\n    case isTransaction(ix):\n      return opts.sendTransaction ? opts.sendTransaction(ix, opts) : sendTransaction(ix, opts)\n    case isGetTransactionStatus(ix):\n      return opts.sendGetTransactionStatus ? opts.sendGetTransactionStatus(ix, opts) : sendGetTransactionStatus(ix, opts)\n    case isGetTransaction(ix):\n      return opts.sendGetTransaction ? opts.sendGetTransaction(ix, opts) : sendGetTransaction(ix, opts)\n    case isScript(ix):\n      return opts.sendExecuteScript ? opts.sendExecuteScript(ix, opts) : sendExecuteScript(ix, opts)\n    case isGetAccount(ix):\n      return opts.sendGetAccount ? opts.sendGetAccount(ix, opts) : sendGetAccount(ix, opts)\n    case isGetEvents(ix):\n      return opts.sendGetEvents ? opts.sendGetEvents(ix, opts) : sendGetEvents(ix, opts)\n    case isGetLatestBlock(ix):\n      return opts.sendGetLatestBlock ? opts.sendGetLatestBlock(ix, opts) : sendGetLatestBlock(ix,  opts)\n    case isGetBlock(ix):\n      return opts.sendGetBlock ? opts.sendGetBlock(ix, opts) : sendGetBlock(ix, opts)\n    case isGetBlockHeader(ix):\n      return opts.sendGetBlockHeader ? opts.sendGetBlockHeader(ix, opts) : sendGetBlockHeader(ix, opts)\n    case isGetBlockById(ix):\n      return opts.sendGetBlockById ? opts.sendGetBlockById(ix, opts) : sendGetBlockById(ix, opts)\n    case isGetBlockByHeight(ix):\n      return opts.sendGetBlockByHeight ? opts.sendGetBlockByHeight(ix, opts) : sendGetBlockByHeight(ix, opts)\n    case isGetCollection(ix):\n      return opts.sendGetCollection ? opts.sendGetCollection(ix, opts) : sendGetCollection(ix, opts)\n    case isPing(ix):\n      return opts.sendPing ? opts.sendPing(ix, opts) : sendPing(ix, opts)\n    default:\n      return ix\n  }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionStatus = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary as defaultUnary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  const unary = opts.unary || defaultUnary\n\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"../config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx => prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"), 32).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport const createSignableVoucher = ix => {\n  const buildInsideSigners = () =>\n    findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const buildOutsideSigners = () =>\n    findOutsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners(),\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./resolve-signatures\"\n\nconst isFn = v => typeof v === \"function\"\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      if (ax.addr != null && ax.keyId != null) {\n        ax.tempId = `${ax.addr}-${ax.keyId}`\n      }\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = Array.from(new Set([...authorizations, ax.tempId]))\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n          // if (!new Set(ix.authorizations).has(ax.tempId)) {\n          //   ix.authorizations = Array.from(\n          //     new Set([...ix.authorizations, ax.tempId])\n          //   )\n          // }\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"../config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\nconst noop = v => v\nconst debug = (key, fn = noop) => async ix => {\n  const take = (obj, keys = []) => {\n    if (typeof keys === \"string\") keys = keys.split(\" \")\n    keys.reduce((acc, key) => ({...acc, [key]: obj[key]}), {})\n  }\n\n  const accts = ix =>\n    [\n      \"\\nAccounts:\",\n      {\n        proposer: ix.proposer,\n        authorizations: ix.authorizations,\n        payer: ix.payer,\n      },\n      \"\\n\\nDetails:\",\n      ix.accounts,\n    ].filter(Boolean)\n\n  const log = (...msg) => {\n    console.log(`debug[${key}] ---\\n`, ...msg, \"\\n\\n\\n---\")\n  }\n\n  if (await config.get(`debug.${key}`)) await fn(ix, log, accts)\n  return ix\n}\n\nexport const resolve = pipe([\n  resolveCadence,\n  debug(\"cadence\", (ix, log) => log(ix.message.cadence)),\n  resolveArguments,\n  debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)),\n  resolveAccounts,\n  debug(\"accounts\", (ix, log, accts) => log(...accts(ix))),\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  debug(\"signatures\", (ix, log, accts) => log(...accts(ix))),\n  resolveFinalNormalization,\n  resolveValidators,\n  debug(\"resolved\", (ix, log) => log(ix)),\n])\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], send)\n    ix.message.refBlock = (await sendFn(build([getBlock()])).then(decode)).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], send)\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(\n        await build([getAccount(acct.addr)])\n      )\n        .then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}\n","import {interaction, pipe} from \"../interaction/interaction.js\"\nimport {config} from \"../config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFn = await config.first(\n    [\"sdk.transport\", \"sdk.send\"],\n    opts.send || defaultSend\n  )\n\n  const resolveFn = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFn(await resolveFn(args), opts)\n}\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"../config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n    encodeTransactionPayload,\n    encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = (voucher) => {\n    // Payload Signers Are: (authorizers + proposer) - payer\n    let payload = new Set(voucher.authorizers)\n    payload.add(voucher.proposalKey.address)\n    payload.delete(voucher.payer)\n    return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = (voucher) => {\n    // Envelope Signers Are: (payer)\n    let envelope = new Set([voucher.payer])\n    return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n    constructor(signerAddress) {\n      const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n      super(msg)\n      this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n    }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n    let payloadSigners = findPayloadSigners(signable.voucher)\n    let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n    const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n    const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n    if (!isPayloadSigner && !isEnvelopeSigner) {\n        throw new UnableToDetermineMessageEncodingTypeForSignerAddress(signerAddress)\n    }\n\n    const message = {\n        cadence: signable.voucher.cadence,\n        refBlock: signable.voucher.refBlock,\n        computeLimit: signable.voucher.computeLimit,\n        arguments: signable.voucher.arguments,\n        proposalKey: {\n            ...signable.voucher.proposalKey,\n            address: sansPrefix(signable.voucher.proposalKey.address)\n        },\n        payer: sansPrefix(signable.voucher.payer),\n        authorizers: signable.voucher.authorizers.map(sansPrefix),\n        payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n            ...ps,\n            address: sansPrefix(ps.address)\n        }))\n    }\n\n    return isPayloadSigner ? encodeTransactionPayload(message) : encodeTransactionEnvelope(message)\n}\n\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] === \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(eventType, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport async function payer(authz) {\n  return prepAccount(authz, {role: PAYER})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\n\nexport const resolveProposerSequenceNumber = ({ node }) => async (ix) => {\n  if (!(isTransaction(ix))) return Ok(ix)\n  if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n  const response = await send(await build([\n    getAccount(ix.accounts[ix.proposer].addr)\n  ]), { node })\n  const decoded = await decodeResponse(response)\n\n  ix.accounts[ix.proposer].sequenceNum = decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n  return Ok(ix)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isGetAccount, isGetBlock} from \"../interaction/interaction\"\n\nexport function mockAccountResponse(ix, numberOfKeys = 5) {\n  // prettier-ignore\n  invariant(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix)\n  // prettier-ignore\n  invariant( ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix)\n\n  const address = ix.account.addr\n\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({length: numberOfKeys}, (_, i) => ({\n        index: i,\n        sequenceNumber: 42,\n      })),\n    },\n  }\n}\n\nexport function mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\",\n    },\n  }\n}\n\nconst identity = v => v\n\nexport function mockSend(fallback = identity) {\n  return async function execSend(ix) {\n    ix = await ix\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix)\n\n      case isGetBlock(ix):\n        return mockGetBlockResponse(ix)\n\n      default:\n        return fallback(ix)\n    }\n  }\n}\n","export const idof = acct => `${acct.addr}-${acct.keyId}`\n\nexport function sig(opts) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\")\n}\n\nexport function authzFn(opts = {}) {\n  return function (account) {\n    const acct = {\n      ...account,\n      ...opts,\n      signingFunction:\n        opts.signingFunction ||\n        account.signingFunction ||\n        fallbackSigningFunction,\n    }\n\n    return acct\n\n    function fallbackSigningFunction(signable) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct),\n      }\n    }\n  }\n}\n\nexport function authzResolve(opts = {}) {\n  return function (account) {\n    const {tempId, ...rest} = opts\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest),\n    }\n  }\n}\n\nconst ROLE = {proposer: false, authorizer: false, payer: false}\nconst noop = () => {}\n\nexport function authzResolveMany(opts = {}) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve: () =>\n        [\n          opts.proposer &&\n            authzFn(opts.proposer)({role: {...ROLE, proposer: true}}),\n          ...opts.authorizations\n            .map(authzFn)\n            .map(d => d({role: {...ROLE, authorizer: true}})),\n          opts.payer && authzFn(opts.payer)({role: {...ROLE, payer: true}}),\n        ].filter(Boolean),\n    }\n  }\n}\n","import {build} from \"../build/build\"\nimport {resolve} from \"../resolve/resolve\"\nimport {ref} from \"../build/build-ref\"\n\nexport const run = (fns = []) => build([ref(\"123\"), ...fns]).then(resolve)\n","export const VERSION = \"0.0.51\"\n","import {deprecate} from \"./utils\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\n\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isGetLatestBlock,\n  isGetBlockById,\n  isGetBlockByHeight,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher} from \"./resolve/resolve-signatures\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {latestBlock} from \"./latest-block/latest-block.js\"\nexport {account} from \"./account/account.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getLatestBlock} from \"./build/build-get-latest-block.js\"\nexport {getBlockById} from \"./build/build-get-block-by-id.js\"\nexport {getBlockByHeight} from \"./build/build-get-block-by-height\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\n\n// Config\nexport {config} from \"./config\"\n\n// Deprecated\nexport const params = params =>\n  deprecate.error({\n    name: \"params\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\nexport const param = params =>\n  deprecate.warn({\n    name: \"param\",\n    transitionsPath:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n  })\n\nimport * as TestUtils from \"./test-utils\"\nexport {TestUtils}\n\nexport {VERSION} from \"./VERSION\"\n","const buildWarningMessage = ({name, transitionsPath}) => {\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst buildErrorMessage = ({name, transitionsPath}) => {\n  console.error(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n    The ${name} builder has been removed from the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: ${transitionsPath}\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst warn = deprecated => buildWarningMessage(deprecated)\n\nconst error = deprecated => {\n  buildErrorMessage(deprecated)\n}\n\nexport const deprecate = {\n  warn,\n  error,\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","isNull","d","Ok","ix","status","Bad","reason","makeIx","wat","tag","prepAccount","acct","opts","invariant","role","ACCOUNT","tempId","accounts","resolve","authorizations","push","makeArgument","arg","message","arguments","value","asArgument","xform","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isOk","isBad","why","recPipe","async","fns","key","has","Error","hardMode","hd","rest","cur","isNumber","hasOwnProperty","isInteraction","e","pipe","args","arg1","arg2","isArray","identity","v","get","fallback","assigns","put","update","fn","destroy","build","NAME","PUT","GET","UPDATED","HANDLERS","ctx","_letter","broadcast","all","letter","reply","GET_ALL_CONFIG","UPDATE_CONFIG","DELETE_CONFIG","delete","CLEAR_CONFIG","WHERE_CONFIG","pattern","where","SUBSCRIBE","subscribe","send","UNSUBSCRIBE","unsubscribe","config","expectReply","timeout","first","wants","head","ret","_delete","callback","subscriber","spawn","clearConfig","values","map","overload","noop","Promise","reject","oldConfig","result","error","response","unary","host","method","request","metadataFromConfig","grpc","metadata","Metadata","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","addr","padStart","pad","u8ToHex","u8","toString","argumentBuffer","stringify","node","sendTransaction","defaultUnary","tx","Transaction","setScript","script","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","keyId","setSequenceNumber","sequenceNum","setProposalKey","signature","sig","Signature","setSignature","addPayloadSignatures","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","AccessAPI","SendTransaction","t2","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendGetTransactionStatus","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","transactionStatus","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransaction","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSignature_asU8","getTransaction","getScript_asU8","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","getProposalKey","sequenceNumber","getSequenceNumber","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendExecuteScript","block","ExecuteScriptAtBlockIDRequest","setBlockId","code","ExecuteScriptAtBlockID","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtBlockHeight","ExecuteScriptAtLatestBlockRequest","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendGetAccount","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","account","GetAccountAtBlockHeight","GetAccountAtLatestBlock","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetEvents","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","GetEventsForHeightRange","blockIds","addBlockIds","GetEventsForBlockIDs","results","getResultsList","blocks","blockId","getBlockId_asU8","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","toDate","toISOString","sendGetLatestBlock","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetBlock","GetBlockByIDRequest","GetBlockByID","GetBlockByHeightRequest","setHeight","GetBlockByHeight","sendGetBlockHeader","GetBlockHeaderByIDRequest","GetBlockHeaderByID","GetBlockHeaderByHeightRequest","GetBlockHeaderByHeight","GetLatestBlockHeaderRequest","GetLatestBlockHeader","blockHeader","sendGetBlockById","sendGetBlockByHeight","sendGetCollection","GetCollectionByIDRequest","collection","GetCollectionByID","getCollection","transactionIds","getTransactionIdsList","sendPing","PingRequest","Ping","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","decoded","fields","name","recurseDecode","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","decode","customDecoders","decodeResponse","data","resolveRefBlockId","getRefId","isFn","isString","resolveCadence","then","entries","cast","resolveArguments","encodeTransactionPayload","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","leftPaddedHexBuffer","TRANSACTION_DOMAIN_TAG","padEnd","argumentToString","encode","validatePayload","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","envelopeFields","payloadSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","findInsideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","findOutsideSigners","outsidePayload","encodeOutsideMessage","inside","add","outside","signingFunction","f_type","f_vsn","roles","voucher","createSignableVoucher","buildSignable","cid","envelopeSigs","buildPreSignable","collectAccounts","last","depth","ax","old","authorizer","curr","resolveAccounts","resolveValidators","validators","cb","resolveFinalNormalization","debug","msg","log","filter","Boolean","accts","sendFn","defaultSend","resolveFn","defaultResolve","decodersFromConfig","fromEntries","UnableToDetermineMessageEncodingTypeForSignerAddress","constructor","signerAddress","super","this","encodeMessageFromSignable","signable","payloadSigners","findPayloadSigners","envelopeSigners","envelope","findEnvelopeSigners","isPayloadSigner","includes","isEnvelopeSigner","ps","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveProposerSequenceNumber","authzFn","ROLE","numberOfKeys","mockAccountResponse","VERSION","params","transitionsPath","buildErrorMessage","param","buildWarningMessage"],"mappings":"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"}